// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.23.4
// source: relation.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	RelationService_GetFollowerRelationList_FullMethodName = "/relation.service.v1.RelationService/GetFollowerRelationList"
	RelationService_GetFollowRelationList_FullMethodName   = "/relation.service.v1.RelationService/GetFollowRelationList"
	RelationService_RelationAction_FullMethodName          = "/relation.service.v1.RelationService/RelationAction"
	RelationService_GetFollowNumber_FullMethodName         = "/relation.service.v1.RelationService/GetFollowNumber"
	RelationService_GetFollowerNumber_FullMethodName       = "/relation.service.v1.RelationService/GetFollowerNumber"
)

// RelationServiceClient is the client API for RelationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type RelationServiceClient interface {
	GetFollowerRelationList(ctx context.Context, in *RelationFollowerListRequest, opts ...grpc.CallOption) (*RelationFollowerListReply, error)
	GetFollowRelationList(ctx context.Context, in *RelationFollowListRequest, opts ...grpc.CallOption) (*RelationFollowListReply, error)
	RelationAction(ctx context.Context, in *RelationActionRequest, opts ...grpc.CallOption) (*RelationActionReply, error)
	GetFollowNumber(ctx context.Context, in *NumberRequest, opts ...grpc.CallOption) (*NumberReply, error)
	GetFollowerNumber(ctx context.Context, in *NumberRequest, opts ...grpc.CallOption) (*NumberReply, error)
}

type relationServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRelationServiceClient(cc grpc.ClientConnInterface) RelationServiceClient {
	return &relationServiceClient{cc}
}

func (c *relationServiceClient) GetFollowerRelationList(ctx context.Context, in *RelationFollowerListRequest, opts ...grpc.CallOption) (*RelationFollowerListReply, error) {
	out := new(RelationFollowerListReply)
	err := c.cc.Invoke(ctx, RelationService_GetFollowerRelationList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *relationServiceClient) GetFollowRelationList(ctx context.Context, in *RelationFollowListRequest, opts ...grpc.CallOption) (*RelationFollowListReply, error) {
	out := new(RelationFollowListReply)
	err := c.cc.Invoke(ctx, RelationService_GetFollowRelationList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *relationServiceClient) RelationAction(ctx context.Context, in *RelationActionRequest, opts ...grpc.CallOption) (*RelationActionReply, error) {
	out := new(RelationActionReply)
	err := c.cc.Invoke(ctx, RelationService_RelationAction_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *relationServiceClient) GetFollowNumber(ctx context.Context, in *NumberRequest, opts ...grpc.CallOption) (*NumberReply, error) {
	out := new(NumberReply)
	err := c.cc.Invoke(ctx, RelationService_GetFollowNumber_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *relationServiceClient) GetFollowerNumber(ctx context.Context, in *NumberRequest, opts ...grpc.CallOption) (*NumberReply, error) {
	out := new(NumberReply)
	err := c.cc.Invoke(ctx, RelationService_GetFollowerNumber_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RelationServiceServer is the server API for RelationService service.
// All implementations must embed UnimplementedRelationServiceServer
// for forward compatibility
type RelationServiceServer interface {
	GetFollowerRelationList(context.Context, *RelationFollowerListRequest) (*RelationFollowerListReply, error)
	GetFollowRelationList(context.Context, *RelationFollowListRequest) (*RelationFollowListReply, error)
	RelationAction(context.Context, *RelationActionRequest) (*RelationActionReply, error)
	GetFollowNumber(context.Context, *NumberRequest) (*NumberReply, error)
	GetFollowerNumber(context.Context, *NumberRequest) (*NumberReply, error)
	mustEmbedUnimplementedRelationServiceServer()
}

// UnimplementedRelationServiceServer must be embedded to have forward compatible implementations.
type UnimplementedRelationServiceServer struct {
}

func (UnimplementedRelationServiceServer) GetFollowerRelationList(context.Context, *RelationFollowerListRequest) (*RelationFollowerListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFollowerRelationList not implemented")
}
func (UnimplementedRelationServiceServer) GetFollowRelationList(context.Context, *RelationFollowListRequest) (*RelationFollowListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFollowRelationList not implemented")
}
func (UnimplementedRelationServiceServer) RelationAction(context.Context, *RelationActionRequest) (*RelationActionReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RelationAction not implemented")
}
func (UnimplementedRelationServiceServer) GetFollowNumber(context.Context, *NumberRequest) (*NumberReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFollowNumber not implemented")
}
func (UnimplementedRelationServiceServer) GetFollowerNumber(context.Context, *NumberRequest) (*NumberReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFollowerNumber not implemented")
}
func (UnimplementedRelationServiceServer) mustEmbedUnimplementedRelationServiceServer() {}

// UnsafeRelationServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to RelationServiceServer will
// result in compilation errors.
type UnsafeRelationServiceServer interface {
	mustEmbedUnimplementedRelationServiceServer()
}

func RegisterRelationServiceServer(s grpc.ServiceRegistrar, srv RelationServiceServer) {
	s.RegisterService(&RelationService_ServiceDesc, srv)
}

func _RelationService_GetFollowerRelationList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RelationFollowerListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RelationServiceServer).GetFollowerRelationList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RelationService_GetFollowerRelationList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RelationServiceServer).GetFollowerRelationList(ctx, req.(*RelationFollowerListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RelationService_GetFollowRelationList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RelationFollowListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RelationServiceServer).GetFollowRelationList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RelationService_GetFollowRelationList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RelationServiceServer).GetFollowRelationList(ctx, req.(*RelationFollowListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RelationService_RelationAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RelationActionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RelationServiceServer).RelationAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RelationService_RelationAction_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RelationServiceServer).RelationAction(ctx, req.(*RelationActionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RelationService_GetFollowNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NumberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RelationServiceServer).GetFollowNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RelationService_GetFollowNumber_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RelationServiceServer).GetFollowNumber(ctx, req.(*NumberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RelationService_GetFollowerNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NumberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RelationServiceServer).GetFollowerNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RelationService_GetFollowerNumber_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RelationServiceServer).GetFollowerNumber(ctx, req.(*NumberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// RelationService_ServiceDesc is the grpc.ServiceDesc for RelationService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var RelationService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "relation.service.v1.RelationService",
	HandlerType: (*RelationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFollowerRelationList",
			Handler:    _RelationService_GetFollowerRelationList_Handler,
		},
		{
			MethodName: "GetFollowRelationList",
			Handler:    _RelationService_GetFollowRelationList_Handler,
		},
		{
			MethodName: "RelationAction",
			Handler:    _RelationService_RelationAction_Handler,
		},
		{
			MethodName: "GetFollowNumber",
			Handler:    _RelationService_GetFollowNumber_Handler,
		},
		{
			MethodName: "GetFollowerNumber",
			Handler:    _RelationService_GetFollowerNumber_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "relation.proto",
}

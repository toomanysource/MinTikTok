syntax = "proto3";

package message.service.v1;

option go_package = "api/message/service/v1;v1";
import "google/api/annotations.proto";

service messageService {
	rpc GetMessageList(MessageListRequest) returns (MessageListReply) {
		option (google.api.http) = {
			get: "/douyin/message/chat"
		};
	}
	rpc MessageAction(MessageActionRequest) returns (MessageActionReply) {
		option (google.api.http) = {
			post: "/douyin/message/action"
			body: "*"
		};
	}
}

message MessageListRequest {
  string token = 1; // 用户鉴权token
  int64 to_user_id = 2; // 对方用户id
  int64 pre_msg_time=3;//上次最新消息的时间（新增字段-apk更新中）
}

message MessageListReply {
  int32 status_code = 1 [json_name = "status_code"]; // 状态码，0-成功，其他值-失败
  string status_msg = 2 [json_name = "status_msg"]; // 返回状态描述
  repeated Message message_list = 3 [json_name = "message_list"]; // 消息列表
}

message MessageActionRequest {
  string token = 1; // 用户鉴权token
  int64 to_user_id = 2; // 对方用户id
  int32 action_type = 3; // 1-发送消息
  string content = 4; // 消息内容
}

message MessageActionReply {
  int32 status_code = 1 [json_name = "status_code"]; // 状态码，0-成功，其他值-失败
  string status_msg = 2 [json_name = "status_msg"]; // 返回状态描述
}

message Message {
  int64 id = 1 [json_name = "id"]; // 消息id
  int64 to_user_id = 2 [json_name = "to_user_id"]; // 该消息接收者的id
  int64 from_user_id =3 [json_name = "from_user_id"]; // 该消息发送者的id
  string content = 4 [json_name = "content"]; // 消息内容
  string create_time = 5 [json_name = "create_time"]; // 消息创建时间
}